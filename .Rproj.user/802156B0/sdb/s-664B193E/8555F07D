{
    "collab_server" : "",
    "contents" : "# load required libraries\nlibrary(ROCR)\n\n# set working directory to where the data is stored\nsetwd(\"/dors/meilerlab/home/lib14/projects/kcnq1/modeling/vu_collection/hidden1neuron_nodropout/\")\n\nreplicates <- 200\nfolds <- 3\naucs.test <- numeric(length = replicates)\nmccs.test <- numeric(length = replicates)\ntprs.test <- numeric(length = replicates)\ntnrs.test <- numeric(length = replicates)\naccs.test <- numeric(length = replicates)\nfor (i in 1:replicates) {\n  aucs.test.folds <- numeric(length = folds)\n  mccs.test.folds <- numeric(length = folds)\n  tprs.test.folds <- numeric(length = folds)\n  tnrs.test.folds <- numeric(length = folds)\n  accs.test.folds <- numeric(length = folds)\n  for (j in 0:(folds - 1)) {\n    cat(\"reading\", paste(\"training_\",i,\"_\",j,\".csv\",sep = \"\"),\"\\n\")\n    df.train <- read.csv(file = paste(\"training_\",i,\"_\",j,\".csv\",sep = \"\"),\n                         header = FALSE)\n    cat(\"reading\", paste(\"testing_\",i,\"_\",j,\".csv\",sep = \"\"),\"\\n\")\n    df.test <- read.csv(file = paste(\"testing_\",i,\"_\",j,\".csv\",sep = \"\"),\n                        header = FALSE)\n    # create a ROCR prediction object\n    # the first four columns are: sequence id, wilt type, mutant, and label\n    rocr.train <- prediction(predictions = df.train[, 2], labels = df.train[, 3])\n    # compute current mcc and store it in the numeric vector mccs\n    mats.unlisted <- unlist(performance(prediction.obj = rocr.train, measure = \"mat\")@y.values)\n    max.mcc.index <- which.max(mats.unlisted)\n    # optimal cutoff\n    optimal_cutoff <- unlist(rocr.train@cutoffs)[max.mcc.index]\n    \n    \n    rocr.test <- prediction(predictions = df.test[, 2], labels = df.test[, 3])\n    # compute current auc and store it in the numeric vector aucs\n    aucs.test.folds[j+1] <- unlist(performance(prediction.obj = rocr.test, measure = \"auc\")@y.values)\n    \n    # classify testing set\n    df.test[, 2] <- ifelse(df.test[, 2] < optimal_cutoff, 0, 1)\n    rocr.test.new <- prediction(predictions = df.test[, 2], labels = df.test[, 3])\n    # compute current mcc and store it in the numeric vector mccs\n    mats.unlisted <- unlist(performance(prediction.obj = rocr.test.new, measure = \"mat\")@y.values)\n    mccs.test.folds[j+1] <- mats.unlisted[2]\n    tprs.unlisted <- unlist(performance(prediction.obj = rocr.test.new, measure = \"tpr\")@y.values)\n    tprs.test.folds[j + 1] <- tprs.unlisted[2]\n    tnrs.unlisted <- unlist(performance(prediction.obj = rocr.test.new, measure = \"tnr\")@y.values)\n    tnrs.test.folds[j + 1] <- tnrs.unlisted[2]\n    accs.unlisted <- unlist(performance(prediction.obj = rocr.test.new, measure = \"acc\")@y.values)\n    accs.test.folds[j + 1] <- accs.unlisted[2]\n  }\n  aucs.test[i] <- mean(aucs.test.folds)\n  mccs.test[i] <- mean(mccs.test.folds)\n  tprs.test[i] <- mean(tprs.test.folds)\n  tnrs.test[i] <- mean(tnrs.test.folds)\n  accs.test[i] <- mean(accs.test.folds)\n}",
    "created" : 1496076515024.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "158972781",
    "id" : "8555F07D",
    "lastKnownWriteTime" : 1496077001,
    "last_content_update" : 1496077001079,
    "path" : "~/workspace/rscripts/kcnq1_modeling/evaluate_q1varpred.R",
    "project_path" : "evaluate_q1varpred.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}